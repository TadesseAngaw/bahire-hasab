/*
 * Copyright (C) 2016 Tadesse Angaw
 *
 * This program is written by Tadesse Angaw.
 * You can use and redistribute it without modification.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 *
 * You can contact me at tadesseangaw@gmail.com
 */
package com.tadesse.bahirehasab.app;


import com.tadesse.bahirehasab.help.About;
import com.tadesse.bahirehasab.help.Help;
import com.tadesse.bahirehasab.tools.EthiopianCalendar;
import com.tadesse.bahirehasab.tools.HolydayNotification;
import com.tadesse.bahirehasab.tools.Sound;
import com.tadesse.bahirehasab.tools.ToGeezNumber;
import java.awt.Color;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;

/**
 *
 * @author Tadesse Angaw
 */
public class Home extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;
    Calendar c;
    EthiopianCalendar ec;
    MiniCalendar miniCalendarDialog;
    Holiday holidayDialog;
    Fasting fastingDialog;
    BasicInfo basicInfoDialog;
    SaintMarry saintMarryDialog;
    DateConverter dateConverterDialog;

    
    Preferences root = Preferences.userRoot().node("bahire-hasab");
    boolean onOff = true;

    public static final String MONTHS[] = {"መስከረም", "ጥቅምት", "ኅዳር", "ታህሳስ", "ጥር",
        "የካቲት", "መጋቢት", "ሚያዝያ", "ግንቦት", "ሰኔ", "ሐምሌ", "ነሐሴ", "ጳጉሜ"};

    public int Date, Month, Year;

    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
        internal.setOpaque(false);
        internal.getContentPane().setBackground(new Color(0, 0, 0, 0));
        internal.setTitle(calendar.getText());
        
        int height = (int) Toolkit.getDefaultToolkit().getScreenSize().getHeight();
        int width = (int) Toolkit.getDefaultToolkit().getScreenSize().getWidth();
        this.setLocation((width / 2) - (getWidth() / 2), (height / 2) - (getHeight() / 2));
        ec = new EthiopianCalendar();

        if (monthEnter.getSelectedIndex() == 12) {
            if (ec.getDaysLength((int) yearEnter.getValue()) == 366) {
                dateEnter.setModel(new javax.swing.SpinnerNumberModel(1, 1, 6, 1));
            } else {
                dateEnter.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
            }
        }
        getToday();
        internal.setContentPane(new MiniCalendar(this, true, Date, Month - 1, Year).calendarPanel);
        new Thread() {
            @Override
            public void run() {
                while (true) {
                    c = Calendar.getInstance();
                    int min = c.get(GregorianCalendar.MINUTE);
                    int hour = c.get(GregorianCalendar.HOUR);
                    String m, h;

                    if (hour == 0) {
                        hour = 12;
                    }
                    if (hour > 12) {
                        hour -= 12;
                    }

                    if (min < 10) {
                        m1.setText(ec.toEthiopicNumber(min));
                        m = "0" + min;
                    } else {
                        m = min + "";
                        m1.setText(ec.toEthiopicNumber(min));

                    }

                    h = hour + "";
                    h1.setText(ec.toEthiopicNumber(hour));
                    try {
                        clock.setText(h + ":" + m);
                        blup.setText(":");
                        Thread.sleep(500);
                        clock.setText(h + " " + m);
                        blup.setText("");
                        Thread.sleep(500);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        }.start();

        Holiday h = new Holiday();

        if (h.isHolyday(Date, Month, Year)) {
            HolydayNotification hn = new HolydayNotification(this, true, Date, Month, Year);
            
            new Thread() {
                @Override
                public void run() {
                    Sound.playSound(Sound.HOLYDAY_SOUND);
                }
            }.start();
            
            hn.setVisible(true);
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        mainPanel = new javax.swing.JPanel();
        input = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        yearEnter = new javax.swing.JSpinner();
        monthEnter = new javax.swing.JComboBox(MONTHS);
        dateEnter = new javax.swing.JSpinner();
        h1 = new javax.swing.JLabel();
        blup = new javax.swing.JLabel();
        m1 = new javax.swing.JLabel();
        clock = new javax.swing.JLabel();
        zare = new javax.swing.JLabel();
        today = new org.jdesktop.swingx.JXHyperlink();
        selectionPanel = new javax.swing.JPanel();
        calendar = new javax.swing.JRadioButton();
        holydays = new javax.swing.JRadioButton();
        fasting = new javax.swing.JRadioButton();
        basic = new javax.swing.JRadioButton();
        holydays33 = new javax.swing.JRadioButton();
        togregorian = new javax.swing.JRadioButton();
        calculate = new javax.swing.JButton();
        internal = new javax.swing.JInternalFrame();
        angles = new javax.swing.JLabel();
        background = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        additional = new javax.swing.JMenu();
        toGeezNumber = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        howto = new javax.swing.JMenuItem();
        about = new javax.swing.JMenuItem();

        setTitle("ባሕረ ሐሳብ");
        setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icon.png")));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        mainPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        input.setBackground(java.awt.Color.white);
        input.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel2.setText("ዓመት :");

        jLabel3.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel3.setText("ወር :");

        jLabel4.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        jLabel4.setText("ቀን :");

        yearEnter.setFont(new java.awt.Font("Ebrima", 0, 11)); // NOI18N
        yearEnter.setModel(new javax.swing.SpinnerNumberModel(2008, 0, 9999, 1));
        yearEnter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearEnterFocusGained(evt);
            }
        });

        monthEnter.setFont(new java.awt.Font("Ebrima", 0, 11)); // NOI18N
        monthEnter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monthEnterActionPerformed(evt);
            }
        });

        dateEnter.setFont(new java.awt.Font("Ebrima", 0, 11)); // NOI18N
        dateEnter.setModel(new javax.swing.SpinnerNumberModel(1, 1, 30, 1));
        dateEnter.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                dateEnterFocusGained(evt);
            }
        });

        javax.swing.GroupLayout inputLayout = new javax.swing.GroupLayout(input);
        input.setLayout(inputLayout);
        inputLayout.setHorizontalGroup(
            inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(yearEnter, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(monthEnter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dateEnter))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        inputLayout.setVerticalGroup(
            inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(yearEnter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(monthEnter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(dateEnter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        mainPanel.add(input, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 59, -1, -1));

        h1.setFont(new java.awt.Font("Ebrima", 0, 48)); // NOI18N
        h1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        h1.setText("00");
        mainPanel.add(h1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 70, 60));

        blup.setFont(new java.awt.Font("Ebrima", 0, 48)); // NOI18N
        blup.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        blup.setText(":");
        mainPanel.add(blup, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, -1, 61));

        m1.setFont(new java.awt.Font("Ebrima", 0, 48)); // NOI18N
        m1.setText("00");
        mainPanel.add(m1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, 80, 60));

        clock.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        clock.setForeground(new java.awt.Color(0, 0, 1));
        clock.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clock.setText("00:00");
        mainPanel.add(clock, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, 60, -1));

        zare.setFont(new java.awt.Font("Ebrima", 0, 15)); // NOI18N
        zare.setForeground(new java.awt.Color(0, 0, 1));
        zare.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        zare.setText("ዛሬ");
        mainPanel.add(zare, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 147, -1));

        today.setBorder(null);
        today.setForeground(new java.awt.Color(0, 0, 1));
        today.setText("today");
        today.setClickedColor(new java.awt.Color(0, 0, 1));
        today.setFont(new java.awt.Font("Ebrima", 1, 15)); // NOI18N
        today.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        today.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        today.setUnclickedColor(new java.awt.Color(0, 0, 1));
        today.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayActionPerformed(evt);
            }
        });
        mainPanel.add(today, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 147, 21));

        selectionPanel.setOpaque(false);

        buttonGroup1.add(calendar);
        calendar.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        calendar.setSelected(true);
        calendar.setText("ቀን ማውጫ");
        calendar.setOpaque(false);
        calendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calendarActionPerformed(evt);
            }
        });

        buttonGroup1.add(holydays);
        holydays.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        holydays.setText("የበዓላት ማውጫ");
        holydays.setOpaque(false);
        holydays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holydaysActionPerformed(evt);
            }
        });

        buttonGroup1.add(fasting);
        fasting.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        fasting.setText("የአጽዋማት ማውጫ");
        fasting.setOpaque(false);
        fasting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastingActionPerformed(evt);
            }
        });

        buttonGroup1.add(basic);
        basic.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        basic.setText("መሠረታዊ መረጃዎች");
        basic.setOpaque(false);
        basic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basicActionPerformed(evt);
            }
        });

        buttonGroup1.add(holydays33);
        holydays33.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        holydays33.setText("፴፫ቱ  የእመቤታችን በዓላት");
        holydays33.setOpaque(false);
        holydays33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                holydays33ActionPerformed(evt);
            }
        });

        buttonGroup1.add(togregorian);
        togregorian.setFont(new java.awt.Font("Ebrima", 1, 13)); // NOI18N
        togregorian.setText("ወደ ጎርጎርዮሳዊያን ቀን መቁጠሪያ");
        togregorian.setOpaque(false);
        togregorian.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                togregorianActionPerformed(evt);
            }
        });

        calculate.setFont(new java.awt.Font("Ebrima", 1, 12)); // NOI18N
        calculate.setText("ፈልግ");
        calculate.setOpaque(false);
        calculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectionPanelLayout = new javax.swing.GroupLayout(selectionPanel);
        selectionPanel.setLayout(selectionPanelLayout);
        selectionPanelLayout.setHorizontalGroup(
            selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(calendar)
                    .addComponent(fasting)
                    .addComponent(holydays)
                    .addComponent(basic)
                    .addComponent(togregorian)
                    .addComponent(holydays33))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(calculate)
                .addContainerGap())
        );
        selectionPanelLayout.setVerticalGroup(
            selectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(calendar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(holydays)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fasting)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(basic)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(holydays33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(togregorian)
                .addGap(42, 42, 42)
                .addComponent(calculate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mainPanel.add(selectionPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 206, 220, 250));

        internal.setBorder(null);
        internal.setToolTipText("");
        internal.setFrameIcon(null);
        internal.setVisible(true);

        javax.swing.GroupLayout internalLayout = new javax.swing.GroupLayout(internal.getContentPane());
        internal.getContentPane().setLayout(internalLayout);
        internalLayout.setHorizontalGroup(
            internalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 392, Short.MAX_VALUE)
        );
        internalLayout.setVerticalGroup(
            internalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 296, Short.MAX_VALUE)
        );

        mainPanel.add(internal, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, -1, -1));

        angles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tadesse/bahirehasab/resource/angles.png"))); // NOI18N
        mainPanel.add(angles, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 40));

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tadesse/bahirehasab/resource/background.png"))); // NOI18N
        mainPanel.add(background, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 480));

        additional.setText("ተጨማሪ");
        additional.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N

        toGeezNumber.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        toGeezNumber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tadesse/bahirehasab/resource/One.png"))); // NOI18N
        toGeezNumber.setText("ወደ ግዕዝ ቁጥር መቀየሪያ");
        toGeezNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toGeezNumberActionPerformed(evt);
            }
        });
        additional.add(toGeezNumber);

        jMenuBar1.add(additional);

        help.setText("እርዳታ");
        help.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N

        howto.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        howto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tadesse/bahirehasab/resource/Help Purple Button.png"))); // NOI18N
        howto.setText(" አጠቃቀም");
        howto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                howtoActionPerformed(evt);
            }
        });
        help.add(howto);

        about.setFont(new java.awt.Font("Ebrima", 0, 13)); // NOI18N
        about.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/tadesse/bahirehasab/resource/Get Info Purple Button.png"))); // NOI18N
        about.setText("ስለ ሶፍትዌሩ");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        help.add(about);

        jMenuBar1.add(help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void calculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateActionPerformed
        int year = (int) yearEnter.getValue();
        int month = monthEnter.getSelectedIndex();
        int date = (int) dateEnter.getValue();

        if (calendar.isSelected()) {
            miniCalendarDialog = new MiniCalendar(this, true, date, month, year);
            internal.setContentPane(miniCalendarDialog.calendarPanel);
        } else if (fasting.isSelected()) {
            fastingDialog = new Fasting(this, true, year);
            internal.setContentPane(fastingDialog.fastingPanel);
        } else if (holydays.isSelected()) {
            holidayDialog = new Holiday(this, true, year);
            internal.setContentPane(holidayDialog.holydayPanel);
        } else if (basic.isSelected()) {
            basicInfoDialog = new BasicInfo(this, true, year);
            internal.setContentPane(basicInfoDialog.basicInfoPanel);
        } else if (holydays33.isSelected()) {
            saintMarryDialog = new SaintMarry(this, true, year);
            internal.setContentPane(saintMarryDialog.stMarryPanel);
        } else if (togregorian.isSelected()) {
            dateConverterDialog = new DateConverter(this, true);
            internal.setContentPane(dateConverterDialog.dateConverterPanel);
        }

    }//GEN-LAST:event_calculateActionPerformed
    public void change() {
        if (internal.getContentPane().getName() != null) {
            String name = internal.getContentPane().getName();
            String panels[] = {"calendarPanel", "holydayPanel", "fastingPanel",
                "basicInfoPanel", "stMarryPanel", "dateConverterPanel"};

            if (name.equals(panels[0])) {
                internal.setContentPane(new MiniCalendar(this, true, Date, Month, Year).calendarPanel);
            } else if (name.equals(panels[1])) {
                internal.setContentPane(new Holiday(this, true, Year).holydayPanel);
            } else if (name.equals(panels[2])) {
                internal.setContentPane(new Fasting(this, true, Year).fastingPanel);
            } else if (name.equals(panels[3])) {
                internal.setContentPane(new BasicInfo(this, true, Year).basicInfoPanel);
            } else if (name.equals(panels[4])) {
                internal.setContentPane(new SaintMarry(this, true, Year).stMarryPanel);
            } else if (name.equals(panels[5])) {
                internal.setContentPane(new DateConverter(this, true).dateConverterPanel);
            }
        }

    }

    public void getToday() {
        Calendar c = Calendar.getInstance();
        int ethiopic[] = ec.toEthiopicDate(c);
        int date = ec.formattedDate(ethiopic[0], ethiopic[1])[0];
        int month = ec.formattedDate(ethiopic[0], ethiopic[1])[1];
        int year = ec.formattedDate(ethiopic[0], ethiopic[1])[2];
        monthEnter.setSelectedIndex(month - 1);
        dateEnter.setValue(date);
        yearEnter.setValue(year);
        today.setText(ec.getMonthFormat(ec.toNumberDay(date, month, year), year));
        Year = year;
        Month = month;
        Date = date;
    }


    private void yearEnterFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearEnterFocusGained
        Year = (int) yearEnter.getValue();
        change();
    }//GEN-LAST:event_yearEnterFocusGained

    private void dateEnterFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateEnterFocusGained
        Date = (int) dateEnter.getValue();
        change();
    }//GEN-LAST:event_dateEnterFocusGained

    private void togregorianActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_togregorianActionPerformed
        if (togregorian.isSelected()) {
            dateConverterDialog = new DateConverter(this, true);
            internal.setContentPane(dateConverterDialog.dateConverterPanel);
            internal.setTitle(togregorian.getText());
        }
    }//GEN-LAST:event_togregorianActionPerformed

    private void todayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todayActionPerformed
        getToday();
    }//GEN-LAST:event_todayActionPerformed

    private void monthEnterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monthEnterActionPerformed
        ec = new EthiopianCalendar();
        Month = monthEnter.getSelectedIndex();
        if (monthEnter.getSelectedIndex() == 12) {
            if (ec.isLeapYear((int) yearEnter.getValue())) {
                dateEnter.setModel(new javax.swing.SpinnerNumberModel(1, 1, 6, 1));
            } else {
                dateEnter.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));
            }
        } else {
            dateEnter.setModel(new javax.swing.SpinnerNumberModel((int) dateEnter.getValue(), 1, 30, 1));
        }
        change();
    }//GEN-LAST:event_monthEnterActionPerformed

    private void holydays33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holydays33ActionPerformed
        if (holydays33.isSelected()) {
            int year = (int) yearEnter.getValue();
            saintMarryDialog = new SaintMarry(this, true, year);
            internal.setContentPane(saintMarryDialog.stMarryPanel);
            internal.setTitle(holydays33.getText());
        }
    }//GEN-LAST:event_holydays33ActionPerformed

    private void holydaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_holydaysActionPerformed
        if (holydays.isSelected()) {
            int year = (int) yearEnter.getValue();
            holidayDialog = new Holiday(this, true, year);
            internal.setContentPane(holidayDialog.holydayPanel);
            internal.setTitle(holydays.getText());
        }
    }//GEN-LAST:event_holydaysActionPerformed

    private void fastingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastingActionPerformed
        if(fasting.isSelected()){
        int year = (int) yearEnter.getValue();
        fastingDialog = new Fasting(this, true, year);
        internal.setContentPane(fastingDialog.fastingPanel);
        internal.setTitle(fasting.getText());
        }
    }//GEN-LAST:event_fastingActionPerformed

    private void basicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basicActionPerformed
        if (basic.isSelected()) {
            int year = (int) yearEnter.getValue();
            basicInfoDialog = new BasicInfo(this, true, year);
            internal.setContentPane(basicInfoDialog.basicInfoPanel);
            internal.setTitle(basic.getText());
        }
    }//GEN-LAST:event_basicActionPerformed

    private void calendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calendarActionPerformed
        if (calendar.isSelected()) {
            int year = (int) yearEnter.getValue();
            int month = monthEnter.getSelectedIndex();
            int date = (int) dateEnter.getValue();
            miniCalendarDialog = new MiniCalendar(this, true, date, month, year);
            internal.setContentPane(miniCalendarDialog.calendarPanel);
            internal.setTitle(calendar.getText());
        }
    }//GEN-LAST:event_calendarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        Exit e = new Exit(this, true);
        e.setVisible(true);
        if (e.OPTION == Exit.YES) {
            System.exit(0);
        } else {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing

    private void howtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_howtoActionPerformed
        Help help = new Help(null, true);
        help.setVisible(true);
    }//GEN-LAST:event_howtoActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        About about = new About(this, true);
        about.setVisible(true);
    }//GEN-LAST:event_aboutActionPerformed

    private void toGeezNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toGeezNumberActionPerformed
        ToGeezNumber a = new ToGeezNumber(this, true);
        a.setVisible(true);
    }//GEN-LAST:event_toGeezNumberActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JMenu additional;
    private javax.swing.JLabel angles;
    private javax.swing.JLabel background;
    private javax.swing.JRadioButton basic;
    private javax.swing.JLabel blup;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton calculate;
    private javax.swing.JRadioButton calendar;
    private javax.swing.JLabel clock;
    private javax.swing.JSpinner dateEnter;
    private javax.swing.JRadioButton fasting;
    private javax.swing.JLabel h1;
    private javax.swing.JMenu help;
    private javax.swing.JRadioButton holydays;
    private javax.swing.JRadioButton holydays33;
    private javax.swing.JMenuItem howto;
    private javax.swing.JPanel input;
    private javax.swing.JInternalFrame internal;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JLabel m1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JComboBox monthEnter;
    private javax.swing.JPanel selectionPanel;
    private javax.swing.JMenuItem toGeezNumber;
    private org.jdesktop.swingx.JXHyperlink today;
    private javax.swing.JRadioButton togregorian;
    private javax.swing.JSpinner yearEnter;
    private javax.swing.JLabel zare;
    // End of variables declaration//GEN-END:variables
}
